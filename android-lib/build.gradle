plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

def clientDepVersion = project.'lsAndroid.depVersion'

dependencies {
    rootProject.ext.commonLibs.api.each { api it }
    rootProject.ext.commonLibs.implementation.each { implementation it }
    api "com.lightstreamer:ls-android-client:$clientDepVersion"
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 29
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['../src/main/java','../src/android/java']
            manifest.srcFile '../src/android/AndroidManifest.xml'
            resources.srcDir '../src/android/resources'
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            androidLibrary(MavenPublication) {
                from components.release

                artifact androidSourcesJar
                artifact androidJavadocJar

                pom {
                    name = POM_ANDROID_LIBRARY_NAME
                    description = POM_DESCRIPTION
                    url = POM_URL

                    licenses {
                        license {
                            name = POM_LICENSE_NAME
                            url = POM_LICENSE_URL
                        }
                    }

                    developers {
                        developer {
                            name = POM_DEVELOPER_NAME
                            email = POM_DEVELOPER_EMAIL
                            organization = POM_DEVELOPER_ORGANIZATION
                            organizationUrl = POM_DEVELOPER_ORGANIZATION_URL
                        }
                    }

                    scm {
                        connection = "scm:git:${POM_URL}.git"
                        developerConnection = "scm:git:${POM_URL}.git"
                        url = POM_URL
                    }
                }
            }
        }

        repositories {
            maven {
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }

        signing {
            sign publishing.publications.androidLibrary
        }
    }
}

android.libraryVariants.all { variant ->
    if (variant.name == 'release') {
        task("javadocRelease", type:Javadoc, dependsOn: compileReleaseSources) {
            title "$POM_ANDROID_LIBRARY_NAME $version API Specification"
            destinationDir = new File("$project.buildDir/docs/javadoc")
            source = android.sourceSets.main.java.srcDirs
            classpath += variant.javaCompileProvider.get().classpath
            classpath += project.files("$buildDir/intermediates/javac/release/classes")
            exclude '**/AndroidDisconnectionHandler.java'
            exclude '**/BuildConfig.java'
            exclude "**/descriptors"
            exclude "**/utils"
            options.overview '../src/android/javadoc/overview.html'
            options.links "${project.'lsAndroid.javadocsLink'}/$clientDepVersion"
            options.links project.'jms.javadocsLink'
            options.addBooleanOption('Xdoclint', true)
        }

        task androidJavadocJar(type: Jar, dependsOn: javadocRelease) {
            archiveClassifier.set('javadoc')
            from javadocRelease.destinationDir
        }


    }
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

check.dependsOn(rootProject.tasks.verifyGoogleJavaFormat)